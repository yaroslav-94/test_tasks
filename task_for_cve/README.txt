Описание задания:
1) Реализовать пайплайн CV классификации изображений с помощью pytorch
2) Создать сервис на Flask, который может классифицировать картинки собак
3) Обернуть его в Docker*
4) Создать telegram-бота для классификации собак*
Задания со * не являются обязательными, но их выполнение будет являться конкурентным преимуществом при
выборе кандидата

Данные: Датасет можно взять отсюда https://github.com/fastai/imagenette, подраздел Imagewoof

Ограничения: Необходимо использовать Pytorch как базовый фреймворк

На что будет обращено внимание при проверке:
1) Выбранная архитектура при решении задачи
2) Полученные метрики
3) Глубина разведочного слоя
4) Анализ ошибок

--------------------------------------------------------------------------------------

Что было сделано:
1) Опробовано несколько моделей, выбрана наилучшая по качеству предсказания на валидационной выборке
Посмотреть в папке 'model'
2) Написан сервис с использованием Flask, реализующий необходимые требования
Посмотреть в папке 'flask_service'
3) Написаны автотесты, проверяющие основные параметры API реализованного сервиса
Посмотреть в папке 'test_service'
4) Написан Dockerfile, по которому собран образ сервиса
Посмотреть Dockerfile можно в папке 'flask_service'
Собран Docker Image, который находится здесь - https://hub.docker.com/r/yaninyv/flask_service

В папке 'flask_client' собраны основные команды для сервиса.
При работе над каждой частью задания находил что-то интересное. Часть "фишек" представлено в работе

